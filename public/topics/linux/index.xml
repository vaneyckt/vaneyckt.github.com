<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux on vaneyckt.io</title>
    <link>http://localhost:1313/topics/linux/</link>
    <description>Recent content in Linux on vaneyckt.io</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Tom Van Eyck</copyright>
    <lastBuildDate>Sun, 16 Aug 2015 19:43:34 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/topics/linux/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Installing Chromedriver</title>
      <link>http://localhost:1313/posts/installing_chromedriver/</link>
      <pubDate>Sun, 16 Aug 2015 19:43:34 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/installing_chromedriver/</guid>
      <description>&lt;p&gt;Some time ago I needed to install &lt;a href=&#34;https://sites.google.com/a/chromium.org/chromedriver/&#34;&gt;chromedriver&lt;/a&gt; on a ubuntu machine. While this wasn&amp;rsquo;t too hard, I was nevertheless surprised by the number of open StackOverflow questions on this topic. So I decided to leave some notes for my future self.&lt;/p&gt;

&lt;p&gt;First of all, let&amp;rsquo;s install chromedriver.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ LATEST_RELEASE=$(curl http://chromedriver.storage.googleapis.com/LATEST_RELEASE)
$ wget http://chromedriver.storage.googleapis.com/$LATEST_RELEASE/chromedriver_linux64.zip
$ unzip chromedriver_linux64.zip
$ rm chromedriver_linux64.zip
$ sudo mv chromedriver /usr/local/bin
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Let&amp;rsquo;s see what happens when we try and run it.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ chromedriver

chromedriver: error while loading shared libraries: libgconf-2.so.4:
cannot open shared object file: No such file or directory
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That&amp;rsquo;s a bit unexpected. Luckily we can easily fix this.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ sudo apt-get install libgconf-2-4
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now that we have a functioning chromedriver, the only thing left to do is to install Chrome. After all, chromedriver can&amp;rsquo;t function without Chrome.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
$ sudo sh -c &#39;echo &amp;quot;deb http://dl.google.com/linux/chrome/deb/ stable main&amp;quot; &amp;gt;&amp;gt; /etc/apt/sources.list.d/google.list&#39;
$ sudo apt-get update
$ sudo apt-get install google-chrome-stable
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And that&amp;rsquo;s it. You should be good to go now.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Safer bash scripts with &#39;set -euxo pipefail&#39;</title>
      <link>http://localhost:1313/posts/safer_bash_scripts_with_set_euxo_pipefail/</link>
      <pubDate>Wed, 14 May 2014 20:14:48 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/safer_bash_scripts_with_set_euxo_pipefail/</guid>
      <description>&lt;p&gt;the -e makes it fail if anything returns a non-zero value
means you don&amp;rsquo;t have to explicitly check for it, cleaner code&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://sipb.mit.edu/doc/safe-shell/&#34;&gt;https://sipb.mit.edu/doc/safe-shell/&lt;/a&gt;
&lt;a href=&#34;http://blog.kablamo.org/2015/11/08/bash-tricks-eux/&#34;&gt;http://blog.kablamo.org/2015/11/08/bash-tricks-eux/&lt;/a&gt;
be sure to start code examples here with /bin/bash &lt;a href=&#34;https://gist.github.com/jistr/2575b78058fed8be36d9&#34;&gt;https://gist.github.com/jistr/2575b78058fed8be36d9&lt;/a&gt;
&lt;a href=&#34;https://www.gnu.org/software/bash/manual/html_node/The-Set-Builtin.html&#34;&gt;https://www.gnu.org/software/bash/manual/html_node/The-Set-Builtin.html&lt;/a&gt;
&lt;a href=&#34;https://stackoverflow.com/questions/821396/aborting-a-shell-script-if-any-command-returns-a-non-zero-value&#34;&gt;https://stackoverflow.com/questions/821396/aborting-a-shell-script-if-any-command-returns-a-non-zero-value&lt;/a&gt;
&lt;a href=&#34;http://lists.openembedded.org/pipermail/openembedded-core/2015-August/108706.html&#34;&gt;http://lists.openembedded.org/pipermail/openembedded-core/2015-August/108706.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;tom [5:49 PM]
@emil.varga: are you sure this is correct? &lt;a href=&#34;https://github.com/Swrve/swrve/blob/release-74/batch/test_emrlib.py#L147&#34;&gt;https://github.com/Swrve/swrve/blob/release-74/batch/test_emrlib.py#L147&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;emil.varga [5:51 PM]
the last time I&amp;rsquo;ve looked it seemed ok, why?&lt;/p&gt;

&lt;p&gt;​[5:52]
it checks that the method returns the previous value&lt;/p&gt;

&lt;p&gt;tom [5:54 PM]
because it looks like deleting that env var, would cause the EmrLib to return /mnt/tmp(edited)&lt;/p&gt;

&lt;p&gt;​[5:54]
&lt;a href=&#34;https://github.com/Swrve/swrve/blob/release-74/batch/swrve/emr.py#L301&#34;&gt;https://github.com/Swrve/swrve/blob/release-74/batch/swrve/emr.py#L301&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;​[5:56]
@emil.varga: ^&lt;/p&gt;

&lt;p&gt;emil.varga [5:57 PM]
ook.. yes that would have been the prev value&lt;/p&gt;

&lt;p&gt;​[5:57]
is that breaking the CI as the ENV variable is deleted?&lt;/p&gt;

&lt;p&gt;tom [5:58 PM]
it wasnt :simple_smile:&lt;/p&gt;

&lt;p&gt;​[5:58]
but now it will&lt;/p&gt;

&lt;p&gt;emil.varga [5:58 PM]
hahaha&lt;/p&gt;

&lt;p&gt;​[5:59]
why?&lt;/p&gt;

&lt;p&gt;tom [5:59 PM]
the script that ran those tests did not have &amp;ldquo;set -e&amp;rdquo; at the top&lt;/p&gt;

&lt;p&gt;emil.varga [5:59 PM]
ok&lt;/p&gt;

&lt;p&gt;tom [5:59 PM]
so the non-zero value being returned by the python test runner did not crash the test&lt;/p&gt;

&lt;p&gt;emil.varga [5:59 PM]
was it returning non-zero values?&lt;/p&gt;

&lt;p&gt;​[5:59]
so the tests were breaking??&lt;/p&gt;

&lt;p&gt;tom [6:00 PM]
it was throwing an exception, but some other code ran after that. So the final exit value of the script was still 0.&lt;/p&gt;

&lt;p&gt;​[6:00]
yes, the test was breaking&lt;/p&gt;

&lt;p&gt;​[6:00]
but the breakage did not fail the build&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Getting connection information with lsof</title>
      <link>http://localhost:1313/posts/getting_connection_information_with_lsof/</link>
      <pubDate>Mon, 21 Oct 2013 17:21:52 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/getting_connection_information_with_lsof/</guid>
      <description>

&lt;p&gt;The &lt;a href=&#34;http://linux.die.net/man/8/lsof&#34;&gt;lsof command&lt;/a&gt; is one of those super useful commands for figuring out what connections are taking place on your machine. While the &lt;code&gt;lsof&lt;/code&gt; command technically just lists open files, just about everything in linux (even sockets) is a file!&lt;/p&gt;

&lt;p&gt;Some useful commands:&lt;/p&gt;

&lt;h4 id=&#34;list-all-network-connections:af3807b2c0cfda8f5c0a92778b96cb1b&#34;&gt;List all network connections&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ lsof -i

COMMAND     PID     USER   FD   TYPE             DEVICE SIZE/OFF NODE NAME
Spotify   36908 vaneyckt   53u  IPv4 0x2097c8deb175c0dd      0t0  TCP localhost:4381 (LISTEN)
Spotify   36908 vaneyckt   54u  IPv4 0x2097c8deab18027d      0t0  TCP localhost:4371 (LISTEN)
Spotify   36908 vaneyckt   71u  IPv4 0x2097c8deba747c1d      0t0  UDP *:57621
Spotify   36908 vaneyckt   72u  IPv4 0x2097c8deb18ef4cf      0t0  TCP *:57621 (LISTEN)
Spotify   36908 vaneyckt   77u  IPv4 0x2097c8deb993b255      0t0  UDP ip-192-168-0-101.ec2.internal:61009
Spotify   36908 vaneyckt   90u  IPv4 0x2097c8dea8c4a66d      0t0  TCP ip-192-168-0-101.ec2.internal:62432-&amp;gt;lon3-accesspoint-a57.lon3.spotify.com:https (ESTABLISHED)
Spotify   36908 vaneyckt   91u  IPv4 0x2097c8de8d029f2d      0t0  UDP ip-192-168-0-101.ec2.internal:52706
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;list-all-network-connections-on-port-4381:af3807b2c0cfda8f5c0a92778b96cb1b&#34;&gt;List all network connections on port 4381&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ lsof -i :4381

COMMAND   PID     USER   FD   TYPE             DEVICE SIZE/OFF NODE NAME
Spotify 36908 vaneyckt   53u  IPv4 0x2097c8deb175c0dd      0t0  TCP localhost:4381 (LISTEN)
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;find-ports-listening-for-connections:af3807b2c0cfda8f5c0a92778b96cb1b&#34;&gt;Find ports listening for connections&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ lsof -i | grep -i LISTEN

Spotify   36908 vaneyckt   53u  IPv4 0x2097c8deb175c0dd      0t0  TCP localhost:4381 (LISTEN)
Spotify   36908 vaneyckt   54u  IPv4 0x2097c8deab18027d      0t0  TCP localhost:4371 (LISTEN)
Spotify   36908 vaneyckt   72u  IPv4 0x2097c8deb18ef4cf      0t0  TCP *:57621 (LISTEN)
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;find-established-connections:af3807b2c0cfda8f5c0a92778b96cb1b&#34;&gt;Find established connections&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ lsof -i | grep -i ESTABLISHED

Spotify   36908 vaneyckt   90u  IPv4 0x2097c8dea8c4a66d      0t0  TCP ip-192-168-0-101.ec2.internal:62432-&amp;gt;lon3-accesspoint-a57.lon3.spotify.com:https (ESTABLISHED)
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;show-all-files-opened-by-a-given-process:af3807b2c0cfda8f5c0a92778b96cb1b&#34;&gt;Show all files opened by a given process&lt;/h4&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ lsof -p 36908

COMMAND   PID     USER   FD     TYPE             DEVICE  SIZE/OFF     NODE NAME
Spotify 36908 vaneyckt   90u    IPv4 0x2097c8dea8c4a66d       0t0      TCP ip-192-168-0-101.ec2.internal:62432-&amp;gt;lon3-accesspoint-a57.lon3.spotify.com:https (ESTABLISHED)
Spotify 36908 vaneyckt   91u    IPv4 0x2097c8de8d029f2d       0t0      UDP ip-192-168-0-101.ec2.internal:52706
Spotify 36908 vaneyckt   92u     REG                1,4   9389456 59387889 /Users/vaneyckt/Library/Caches/com.spotify.client/Data/4a/4a5a23cf1e9dc4210b3c801d57a899098dc12418.file
Spotify 36908 vaneyckt   93u     REG                1,4   8658944 58471210 /private/var/folders/xv/fjmwzr9x5mq_s7dchjq87hjm0000gn/T/.org.chromium.Chromium.6b0Vzp
Spotify 36908 vaneyckt   94u     REG                1,4    524656 54784499 /Users/vaneyckt/Library/Caches/com.spotify.client/Browser/index
Spotify 36908 vaneyckt   95u     REG                1,4     81920 54784500 /Users/vaneyckt/Library/Caches/com.spotify.client/Browser/data_0
Spotify 36908 vaneyckt   96u     REG                1,4    532480 54784501 /Users/vaneyckt/Library/Caches/com.spotify.client/Browser/data_1
Spotify 36908 vaneyckt   97u     REG                1,4   2105344 54784502 /Users/vaneyckt/Library/Caches/com.spotify.client/Browser/data_2
Spotify 36908 vaneyckt   98u     REG                1,4  12591104 54784503 /Users/vaneyckt/Library/Caches/com.spotify.client/Browser/data_3
Spotify 36908 vaneyckt   99r     REG                1,4    144580    28952 /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/HIToolbox.framework/Versions/A/Resources/HIToolbox.rsrc
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>The dig command</title>
      <link>http://localhost:1313/posts/the_dig_command/</link>
      <pubDate>Tue, 08 Oct 2013 13:24:17 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/the_dig_command/</guid>
      <description>&lt;p&gt;Today I learned of the existence of the &lt;a href=&#34;http://linux.die.net/man/1/dig&#34;&gt;dig command&lt;/a&gt;. A very useful little tool for DNS lookups. Here&amp;rsquo;s an example of it in action.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ dig www.google.com

; &amp;lt;&amp;lt;&amp;gt;&amp;gt; DiG 9.8.3-P1 &amp;lt;&amp;lt;&amp;gt;&amp;gt; www.google.com
;; global options: +cmd
;; Got answer:
;; -&amp;gt;&amp;gt;HEADER&amp;lt;&amp;lt;- opcode: QUERY, status: NOERROR, id: 4868
;; flags: qr rd ra; QUERY: 1, ANSWER: 6, AUTHORITY: 0, ADDITIONAL: 0

;; QUESTION SECTION:
;www.google.com.			IN	A

;; ANSWER SECTION:
www.google.com.		72	IN	A	74.125.24.105
www.google.com.		72	IN	A	74.125.24.103
www.google.com.		72	IN	A	74.125.24.104
www.google.com.		72	IN	A	74.125.24.99
www.google.com.		72	IN	A	74.125.24.147
www.google.com.		72	IN	A	74.125.24.106

;; Query time: 11 msec
;; SERVER: 192.168.0.1#53(192.168.0.1)
;; WHEN: Sat Aug 29 13:38:48 2015
;; MSG SIZE  rcvd: 128
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>